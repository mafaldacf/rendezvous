# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import rendezvous_pb2 as proto_dot_rendezvous__pb2


class ClientServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Subscribe = channel.unary_stream(
                '/rendezvous.ClientService/Subscribe',
                request_serializer=proto_dot_rendezvous__pb2.SubscribeMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.SubscribeResponse.FromString,
                )
        self.RegisterRequest = channel.unary_unary(
                '/rendezvous.ClientService/RegisterRequest',
                request_serializer=proto_dot_rendezvous__pb2.RegisterRequestMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.RegisterRequestResponse.FromString,
                )
        self.RegisterBranch = channel.unary_unary(
                '/rendezvous.ClientService/RegisterBranch',
                request_serializer=proto_dot_rendezvous__pb2.RegisterBranchMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.RegisterBranchResponse.FromString,
                )
        self.RegisterBranches = channel.unary_unary(
                '/rendezvous.ClientService/RegisterBranches',
                request_serializer=proto_dot_rendezvous__pb2.RegisterBranchesMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.RegisterBranchesResponse.FromString,
                )
        self.CloseBranch = channel.unary_unary(
                '/rendezvous.ClientService/CloseBranch',
                request_serializer=proto_dot_rendezvous__pb2.CloseBranchMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.Empty.FromString,
                )
        self.WaitRequest = channel.unary_unary(
                '/rendezvous.ClientService/WaitRequest',
                request_serializer=proto_dot_rendezvous__pb2.WaitRequestMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.WaitRequestResponse.FromString,
                )
        self.CheckStatus = channel.unary_unary(
                '/rendezvous.ClientService/CheckStatus',
                request_serializer=proto_dot_rendezvous__pb2.CheckStatusMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.CheckStatusResponse.FromString,
                )
        self.FetchDependencies = channel.unary_unary(
                '/rendezvous.ClientService/FetchDependencies',
                request_serializer=proto_dot_rendezvous__pb2.FetchDependenciesMessage.SerializeToString,
                response_deserializer=proto_dot_rendezvous__pb2.FetchDependenciesResponse.FromString,
                )


class ClientServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Subscribe(self, request, context):
        """Streaming 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterRequest(self, request, context):
        """Unary RPCs 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterBranch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterBranches(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseBranch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WaitRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchDependencies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=proto_dot_rendezvous__pb2.SubscribeMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.SubscribeResponse.SerializeToString,
            ),
            'RegisterRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterRequest,
                    request_deserializer=proto_dot_rendezvous__pb2.RegisterRequestMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.RegisterRequestResponse.SerializeToString,
            ),
            'RegisterBranch': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterBranch,
                    request_deserializer=proto_dot_rendezvous__pb2.RegisterBranchMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.RegisterBranchResponse.SerializeToString,
            ),
            'RegisterBranches': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterBranches,
                    request_deserializer=proto_dot_rendezvous__pb2.RegisterBranchesMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.RegisterBranchesResponse.SerializeToString,
            ),
            'CloseBranch': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseBranch,
                    request_deserializer=proto_dot_rendezvous__pb2.CloseBranchMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.Empty.SerializeToString,
            ),
            'WaitRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.WaitRequest,
                    request_deserializer=proto_dot_rendezvous__pb2.WaitRequestMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.WaitRequestResponse.SerializeToString,
            ),
            'CheckStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStatus,
                    request_deserializer=proto_dot_rendezvous__pb2.CheckStatusMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.CheckStatusResponse.SerializeToString,
            ),
            'FetchDependencies': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchDependencies,
                    request_deserializer=proto_dot_rendezvous__pb2.FetchDependenciesMessage.FromString,
                    response_serializer=proto_dot_rendezvous__pb2.FetchDependenciesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rendezvous.ClientService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/rendezvous.ClientService/Subscribe',
            proto_dot_rendezvous__pb2.SubscribeMessage.SerializeToString,
            proto_dot_rendezvous__pb2.SubscribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rendezvous.ClientService/RegisterRequest',
            proto_dot_rendezvous__pb2.RegisterRequestMessage.SerializeToString,
            proto_dot_rendezvous__pb2.RegisterRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterBranch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rendezvous.ClientService/RegisterBranch',
            proto_dot_rendezvous__pb2.RegisterBranchMessage.SerializeToString,
            proto_dot_rendezvous__pb2.RegisterBranchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterBranches(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rendezvous.ClientService/RegisterBranches',
            proto_dot_rendezvous__pb2.RegisterBranchesMessage.SerializeToString,
            proto_dot_rendezvous__pb2.RegisterBranchesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseBranch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rendezvous.ClientService/CloseBranch',
            proto_dot_rendezvous__pb2.CloseBranchMessage.SerializeToString,
            proto_dot_rendezvous__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WaitRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rendezvous.ClientService/WaitRequest',
            proto_dot_rendezvous__pb2.WaitRequestMessage.SerializeToString,
            proto_dot_rendezvous__pb2.WaitRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rendezvous.ClientService/CheckStatus',
            proto_dot_rendezvous__pb2.CheckStatusMessage.SerializeToString,
            proto_dot_rendezvous__pb2.CheckStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchDependencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rendezvous.ClientService/FetchDependencies',
            proto_dot_rendezvous__pb2.FetchDependenciesMessage.SerializeToString,
            proto_dot_rendezvous__pb2.FetchDependenciesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
